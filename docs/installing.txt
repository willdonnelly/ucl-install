UCL Install
===========

UCL-Install is the basic package management tool provided by the UCL
Portability Layer. It does the bare minimum I felt it could do and
still be considered a proper package manager (although one could
argue that package uninstallation isn't necessarily required, I felt
that it was needed).

Since I fully hope someone will try to replace my package manager, and
I don't really think the code is very good, this means I need to
document exactly what mine does, for interoperability.

Directory Structure
-------------------

There are two main directories to be concerned with, the package cache
and the source tree. The package cache is where packages are downloaded
to before installation, and is used to avoid redownloading packages when
switching installed versions repeatedly.  The source tree is where files
go to be visible to the Scheme runtime.

The package cache is just a flat directory of packages which have been
downloaded from the remote repositories, so not much more needs to be
said about it.

The source tree, on the other hand, requires more care. Clearly, files
are installed there, but there is also a '.meta' directory under which
package management metadata is stored, so that packages can be removed
without consulting the original package file.

.meta/<package>/ - The directory for all metadata related to <package>
.meta/<package>/installed - A blank file created during installation
                            so we can test for installed-ness with
                            the 'file-exists?' predicate
.meta/<package>/owns - Lists all files owned by the package, relative
                       to the source directory, one per line. Used
                       to clean up during uninstallation and to find
                       the owners of conflicting files during the
                       installation of new packages
.meta/<dep>/rdep/<package> - Reverse dependency information. When <package>
                             is installed, it creates an empty file under
                             .meta/<dep>/rdep/ for each package that it
                             depends on. When removing packages, this
                             information can be used to avoid leaving a
                             package behind with a missing dependency.
